---
title: "Data Cuaca yang Dikumpulkan oleh Tim Market Riset"
subtitle: "Penjelasan Singkat"
author: Dept. Market Riset
institute: Nutrifood Indonesia
format: 
  html:
    code-block-bg: true
    code-block-border-left: true
    code-fold: true
    code-summary: "Show me the code!"
    code-tools:
      source: true
      toggle: false
      caption: none
    theme: cyborg
    toc: true
    toc-depth: 3
    toc-location: right
    toc-title: Daftar Isi
    highlight-style: breeze
editor: visual
execute: 
  echo: true
  warning: false
  error: false
---

```{r}
#| include: false

rm(list=ls())

library(dplyr)
library(tidyr)
library(ggplot2)
library(epoxy)

load("~/ARFWSNMRP/Clean Data/data all.rda")

kota = df_final %>% pull(kota) %>% unique() %>% sort()
```

# PENDAHULUAN

## Latar Belakang

-   Tim market riset melakukan *pilot project* untuk mengambil data cuaca di beberapa kota di Indonesia sebagai **tabungan data** yang mungkin akan berguna suatu saat nanti.

-   Temuan kualitatif saat survey terhadap **operator makanan dan minuman**:

> Cuaca panas membuat konsumen membeli minuman seperti NutriSari. Kebalikannya, cuaca dingin membuat jualan minuman seperti NutriSari sepi.

## Tujuan

Mengambil data cuaca di beberapa kota di Indonesia.

## Metode

Data cuaca diambil dari situs [Open Weather Map](openweathermap.org) mengandalkan **API** yang disediakan. Data cuaca yang diambil adalah:

```{r}
colnames(df_final)[-1]
```

Kenapa mengambil data cuaca dari situs [Open Weather Map](openweathermap.org)? Alasannya:

1.  **BMKG**:
    -   **API** dari situs **BMKG** tidak *reliable* dan sulit digunakan.
    -   Tidak ada data *real feel* di situs **BMKG**.
2.  [Open Weather Map](openweathermap.org):
    -   API dari [Open Weather Map](openweathermap.org) cukup *reliable* untuk diambil datanya **per tiga jam**.
    -   Ada data *real feel*.
    -   Cakupan kota lumayan.
    -   Proses *scrape* bisa dilakukan otomatis tanpa supervisi sama sekali.

# DATA YANG DIAMBIL

## Kota

Berikut adalah kota yang diambil data cuacanya:

```{epoxy}
- {kota}
```

## Sampel Data

```{r}
#| include: false

kota_sel = "Semarang"

bikin_grafik = function(kota_sel){
  df_final %>% 
  filter(kota == kota_sel) %>% 
  mutate(jam = lubridate::hour(waktu)) |>
  filter(jam >= 8 & jam <= 18) |>
  mutate(tanggal = lubridate::date(waktu)) |>
  group_by(tanggal) |>
  summarise(feel_like = mean(feel_like)) |>
  ungroup() |>
  ggplot(aes(x = tanggal,
             y = feel_like)) +
  geom_smooth(method = "loess",alpha = .3) +
  geom_line(color = "gray") +
  geom_point() +
  ylim(20,45) +
  theme_minimal() +
  labs(x = "Tanggal",
       y = "Feel Like (dalam Celcius)",
       color = "Kondisi Cuaca",
       title = paste0("Feel Like di ",kota_sel),
       subtitle = "Sumber: openweather.org") +
  theme(legend.position = "bottom")
  }

bikin_grafik_2 = function(kota_sel){
  df_final %>% 
  filter(kota == kota_sel) %>% 
  mutate(jam = lubridate::hour(waktu)) |>
  filter(jam >= 8 & jam <= 18) |>
  mutate(tanggal = lubridate::date(waktu)) |>
  group_by(tanggal) |>
  summarise(humidity = mean(humidity)) |>
  ungroup() |> 
  ggplot(aes(x = tanggal,
             y = humidity)) +
  geom_smooth(method = "loess",alpha = .3) +
  geom_line(color = "gray") +
  geom_point() +
  #ylim(20,45) +
  theme_minimal() +
  labs(x = "Tanggal",
       y = "Humidity",
       color = "Kondisi Cuaca",
       title = paste0("Humidity di ",kota_sel),
       subtitle = "Sumber: openweather.org") +
  theme(legend.position = "bottom")
}


bikin_sebaran = function(kota_sel){
  df_temp = 
  df_final %>% 
  filter(kota == kota_sel) |>
  mutate(jam = lubridate::hour(waktu)) |>
  filter(jam >= 8 & jam <= 18)

  mean_sel   = df_temp$feel_like %>% mean() %>% round(1)
  median_sel = df_temp$feel_like %>% median() %>% round(1)
  pesan      = paste0("Mean: ",mean_sel,"C\nMedian: ",
                      median_sel,"C")

  df_temp %>% 
    ggplot(aes(y = feel_like)) +
    geom_boxplot(color = "black",
                 fill  = "red",
                 alpha = .3) +
    theme_minimal() +
    labs(x = kota_sel,
         y = "Feel Like (dalam Celcius)",
         title = paste0("Boxplot Feel Like di ",kota_sel),
         subtitle = "Sumber: openweather.org") +
    theme(axis.text.x = element_blank()) +
    annotate("label",x = 0,y = median_sel,label = pesan)
}

```

Pada bagian ini, kita akan melihat data cuaca di beberapa kota berikut. Namun saya akan menggunakan data pada waktu jam kerja, yakni pukul 08.00 - 18.00.

### Sebaran Data

Berikut adalah sebaran data di beberapa kota di Indonesia:

```{r}
#| fig-align: center

bikin_sebaran("Semarang")
bikin_sebaran("Jakarta")
bikin_sebaran("Surabaya")
```

### *Trend Feel Like*

Berikut adalah _trend feel like_ dari beberapa kota di Indonesia berikut:

```{r}
#| fig-align: center
#| warning: false
#| message: false

bikin_grafik("Semarang")
bikin_grafik("Jakarta")
bikin_grafik("Surabaya")
```

### _Trend Humidity_

Berikut adalah _trend humidity_ dari beberapa kota di Indonesia berikut:

```{r}
#| fig-align: center
#| warning: false
#| message: false

bikin_grafik_2("Semarang")
bikin_grafik_2("Jakarta")
bikin_grafik_2("Surabaya")
```

## Data Rata-Rata

Berikut adalah 10 kota dengan rata-rata _feel like_ tertinggi di setiap bulannya.

```{r}
list_bulan = 
  df_final %>%
  mutate(jam = lubridate::hour(waktu)) |>
  filter(jam >= 8 & jam <= 18) |>
  mutate(bulan = lubridate::month(waktu)) %>% 
  group_by(bulan,kota) %>% 
  summarise(suhu_mean   = mean(feel_like),
            suhu_median = median(feel_like)) %>% 
  ungroup() %>% 
  group_split(bulan)

list_bulan[[1]] %>% arrange(desc(suhu_mean)) |> head(10) %>% knitr::kable(caption = "Januari 2024")
list_bulan[[2]] %>% arrange(desc(suhu_mean)) |> head(10) %>% knitr::kable(caption = "Februari 2024")
list_bulan[[3]] %>% arrange(desc(suhu_mean)) |> head(10) %>% knitr::kable(caption = "Maret 2024")
list_bulan[[4]] %>% arrange(desc(suhu_mean)) |> head(10) %>% knitr::kable(caption = "April 2024")
list_bulan[[5]] %>% arrange(desc(suhu_mean)) |> head(10) %>% knitr::kable(caption = "Mei 2024")
```


# Perbandingan Suhu Harian Per Area

Pada bagian ini, kita akan kelompokkan semua kota yang ada ke dalam kelompok area _sales_ Nutrifood. Kita akan lihat apakah ada area yang memiliki suhu lebih panas (dan signifikan) dibandingkan dengan area yang lain.

```{r}
df_final %>%
  mutate(jam = lubridate::hour(waktu)) |>
  filter(jam >= 8 & jam <= 18)
  
```


